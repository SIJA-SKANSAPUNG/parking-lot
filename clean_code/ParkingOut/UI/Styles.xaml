<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ParkingOut.UI">

    <!-- Colors -->
    <Color x:Key="SidebarTopColor">#FF2D2D3E</Color>
    <Color x:Key="SidebarBottomColor">#FF1A1A2A</Color>
    <Color x:Key="MenuButtonHoverColor">#FF3A3A4A</Color>
    <Color x:Key="MenuButtonActiveColor">#FF0078D7</Color>
    <Color x:Key="MenuButtonPressedColor">#FF0067C0</Color>

    <!-- Brushes -->
    <LinearGradientBrush x:Key="SidebarBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource SidebarTopColor}" Offset="0"/>
        <GradientStop Color="{StaticResource SidebarBottomColor}" Offset="1"/>
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="MenuButtonHoverBrush" Color="{StaticResource MenuButtonHoverColor}" />
    <SolidColorBrush x:Key="MenuButtonActiveBrush" Color="{StaticResource MenuButtonActiveColor}" />
    <SolidColorBrush x:Key="MenuButtonPressedBrush" Color="{StaticResource MenuButtonPressedColor}" />

    <!-- Menu Button Style -->
    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="10,5"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="5">
                        <Grid>
                            <Rectangle x:Name="Indicator" Width="4" HorizontalAlignment="Left" Visibility="Collapsed" Fill="White"/>
                            <StackPanel Orientation="Horizontal" Margin="15,0">
                                <Image x:Name="Icon" Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Width="24" Height="24" Margin="0,0,15,0"/>
                                <TextBlock x:Name="Text" Text="{TemplateBinding Content}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect with Animation -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuButtonHoverBrush}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                                        To="1.03" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                                        To="1.03" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                                        To="1" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                                        To="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        
                        <!-- Pressed Effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuButtonPressedBrush}"/>
                        </Trigger>
                        
                        <!-- Active State -->
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuButtonActiveBrush}"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        
                        <!-- Collapsed State - Hide Text -->
                        <DataTrigger Binding="{Binding IsCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SidebarControl}}}" Value="True">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Icon" Property="Margin" Value="0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Animation Storyboards -->
    <Storyboard x:Key="ExpandSidebarAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Width" To="220" Duration="0:0:0.2">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    
    <Storyboard x:Key="CollapseSidebarAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Width" To="60" Duration="0:0:0.2">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    
    <!-- Menu Item Fade-In Animations -->
    <Storyboard x:Key="MenuItemsFadeIn">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.1">
            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

</ResourceDictionary> 